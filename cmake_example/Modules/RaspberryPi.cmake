
# Toolchain for raspberry pi
# - on non-windows platforms
#   cmake -DCMAKE_TOOLCHAIN_FILE=Modules/RaspberryPi.cmake
#
# see here for proper setup of your raspberry pi SDK on macosx
# https://github.com/subatomicglue/cross_compile_raspberrypi_on_macosx

set(RASPBERRYPI 1)
set(APPLE 0)
set(MSVC 0)
set(WIN32 0)
set(UNIX 1)

set(triple arm-linux-gnueabihf)

set(CMAKE_SYSTEM_NAME Linux CACHE INTERNAL "" FORCE)
SET(CMAKE_SYSTEM_VERSION 1  CACHE INTERNAL "" FORCE)
set(CMAKE_SYSTEM_PROCESSOR arm CACHE INTERNAL "" FORCE)
set(CMAKE_LIBRARY_ARCHITECTURE ${triple} CACHE INTERNAL "" FORCE)
set(ARCH arm CACHE INTERNAL "" FORCE)
set(CMAKE_CROSSCOMPILING 1 CACHE INTERNAL "" FORCE)

set( CMAKE_VERBOSE_MAKEFILE ON CACHE INTERNAL "" FORCE)


set( SDK $ENV{HOME}/RPI_SDK )
set( BINTOOLS ${SDK}/binutils-2.28/build )
set( SYSROOT ${SDK}/sysroot )
set( INCLUDE_PATH1 ${SYSROOT})
set( INCLUDE_PATH2 ${SYSROOT}/usr/include/c++/4.9)
set( INCLUDE_PATH3 ${SYSROOT}/usr/include/${triple}/c++/4.9)
set( LINKER_PATH ${SYSROOT}/usr/lib/gcc/${triple}/4.9)
set( LINKER_PATH2 ${SYSROOT}/usr/lib/${triple})

INCLUDE_DIRECTORIES(AFTER SYSTEM ${INCLUDE_PATH1})
INCLUDE_DIRECTORIES(AFTER SYSTEM ${INCLUDE_PATH2})
INCLUDE_DIRECTORIES(AFTER SYSTEM ${INCLUDE_PATH3})

set(CMAKE_C_COMPILE_OPTIONS_SYSROOT "--sysroot=")
set(CMAKE_CPP_COMPILE_OPTIONS_SYSROOT "--sysroot=")

set(CMAKE_C_COMPILER ${BINTOOLS}/bin/clang CACHE INTERNAL "" FORCE)
set(CMAKE_C_COMPILER_TARGET ${triple} CACHE INTERNAL "" FORCE)
set(CMAKE_CXX_COMPILER ${BINTOOLS}/bin/clang++ CACHE INTERNAL "" FORCE)
set(CMAKE_CXX_COMPILER_TARGET ${triple} CACHE INTERNAL "" FORCE)
#set(CMAKE_C_COMPILER_ID Clang)
#set(CMAKE_CXX_COMPILER_ID Clang)

#set(CMAKE_<LANG>_COMPILER_EXTERNAL_TOOLCHAIN )


set(CMAKE_SYSROOT ${SYSROOT} CACHE INTERNAL "" FORCE)
SET(CMAKE_FIND_ROOT_PATH ${SYSROOT}  CACHE INTERNAL "" FORCE)

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

SET (CMAKE_C_FLAGS_DEBUG_INIT          "-g" CACHE INTERNAL "" FORCE)
SET (CMAKE_C_FLAGS_MINSIZEREL_INIT     "-Os -DNDEBUG" CACHE INTERNAL "" FORCE)
SET (CMAKE_C_FLAGS_RELEASE_INIT        "-O3 -DNDEBUG" CACHE INTERNAL "" FORCE)
SET (CMAKE_C_FLAGS_RELWITHDEBINFO_INIT "-O2 -g" CACHE INTERNAL "" FORCE)

SET (CMAKE_CXX_FLAGS_DEBUG_INIT          "-g" CACHE INTERNAL "" FORCE)
SET (CMAKE_CXX_FLAGS_MINSIZEREL_INIT     "-Os -DNDEBUG" CACHE INTERNAL "" FORCE)
SET (CMAKE_CXX_FLAGS_RELEASE_INIT        "-O3 -DNDEBUG" CACHE INTERNAL "" FORCE)
SET (CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT "-O2 -g" CACHE INTERNAL "" FORCE)


SET(CMAKE_C_FLAGS_INIT "" CACHE INTERNAL "" FORCE)
SET(CMAKE_CXX_FLAGS_INIT "" CACHE INTERNAL "" FORCE)
SET(CMAKE_C_STANDARD_LINK_DIRECTORIES ${LINKER_PATH} ${LINKER_PATH2})
SET(CMAKE_CXX_STANDARD_LINK_DIRECTORIES ${LINKER_PATH} ${LINKER_PATH2})
SET(CMAKE_EXE_LINKER_FLAGS_INIT "" CACHE INTERNAL "" FORCE)
SET(CMAKE_SHARED_LINKER_FLAGS_INIT "" CACHE INTERNAL "" FORCE)
SET(CMAKE_STATIC_LINKER_FLAGS_INIT "" CACHE INTERNAL "" FORCE)
SET(CMAKE_MODULE_LINKER_FLAGS_INIT "" CACHE INTERNAL "" FORCE)

SET (CMAKE_AR      ${BINTOOLS}/bin/llvm-ar  CACHE INTERNAL "" FORCE)
SET (CMAKE_LINKER  ${BINTOOLS}/bin/llvm-ld  CACHE INTERNAL "" FORCE)
SET (CMAKE_NM      ${BINTOOLS}/bin/llvm-nm  CACHE INTERNAL "" FORCE)
SET (CMAKE_OBJDUMP ${BINTOOLS}/bin/llvm-objdump  CACHE INTERNAL "" FORCE)
SET (CMAKE_RANLIB  ${BINTOOLS}/bin/llvm-ranlib  CACHE INTERNAL "" FORCE)

